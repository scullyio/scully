{"version":3,"sources":["webpack:///src/app/user/post/post.component.ts","webpack:///src/app/user/post/post.component.html","webpack:///src/app/user/posts/posts.component.ts","webpack:///src/app/user/posts/posts.component.html","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/app/user/users/users.component.ts","webpack:///src/app/user/users/users.component.html"],"names":["PostComponent","route","http","transferState","postId$","params","pipe","val","undefined","includes","parseInt","apiPosts$","id","get","title","post$","getState","post","setState","console","log","selector","templateUrl","styleUrls","PostsComponent","userId$","posts$","posts","routes","path","component","children","pathMatch","UserRoutingModule","forChild","imports","exports","UserComponent","next$","Math","min","prev$","max","apiUser$","name","user$","user","UserModule","declarations","UsersComponent","apiUsers$","users$"],"mappings":"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","file":"user-user-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {pluck, shareReplay, switchMap, catchError, tap, filter, map} from 'rxjs/operators';\nimport {Post} from '../posts/posts.component';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {ActivatedRoute} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit {\n  postId$: Observable<number> = this.route.params.pipe(\n    pluck('post'),\n    filter(val => ![undefined, null].includes(val)),\n    map(val => parseInt(val, 10)),\n    shareReplay(1)\n  );\n\n  apiPosts$ = this.postId$.pipe(\n    switchMap(id =>\n      this.http.get<Post>(`https://jsonplaceholder.typicode.com/posts/${id}`).pipe(\n        catchError(() =>\n          of({\n            id,\n            title: 'not found',\n          } as Post)\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  post$ = isScullyGenerated()\n    ? this.transferState.getState<Post>('post')\n    : this.apiPosts$.pipe(tap(post => this.transferState.setState('post', post)));\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private transferState: TransferStateService\n  ) {\n    console.log('post inits');\n  }\n\n  ngOnInit() {}\n}\n","<section *ngIf=\"post$ | async as post\">\n  <h4>{{ post.title }}</h4>\n\n  <p>{{ post.body }}</p>\n</section>\n","import {HttpClient} from '@angular/common/http';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {Observable, of} from 'rxjs';\nimport {catchError, filter, map, pluck, shareReplay, switchMap, tap} from 'rxjs/operators';\n\nexport interface Post {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n}\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css'],\n})\nexport class PostsComponent implements OnInit {\n  userId$: Observable<number> = this.route.params.pipe(\n    pluck('userId'),\n    filter(val => ![undefined, null].includes(val)),\n    map(val => parseInt(val, 10)),\n    shareReplay(1)\n  );\n\n  apiPosts$ = this.userId$.pipe(\n    switchMap(id =>\n      this.http.get<Post[]>(`https://jsonplaceholder.typicode.com/posts?userId=${id}`).pipe(\n        catchError(() =>\n          of({\n            id,\n            title: 'not found',\n          } as Post)\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  posts$ = isScullyGenerated()\n    ? this.transferState.getState('posts')\n    : this.apiPosts$.pipe(tap(posts => this.transferState.setState('posts', posts)));\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private transferState: TransferStateService\n  ) {}\n\n  ngOnInit() {}\n}\n","<h4>User posts</h4>\n<section *ngIf=\"posts$ | async as posts\">\n  <ul>\n    <li *ngFor=\"let post of posts\">\n      <a [routerLink]=\"['post', post.id]\">{{ post.title }}</a>\n    </li>\n  </ul>\n</section>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {UserComponent} from './user.component';\nimport {UsersComponent} from './users/users.component';\nimport {PostsComponent} from './posts/posts.component';\nimport {PostComponent} from './post/post.component';\n\nconst routes: Routes = [\n  {path: '', component: UsersComponent},\n  {\n    path: ':userId',\n    component: UserComponent,\n    children: [\n      {path: '', component: PostsComponent, pathMatch: 'full'},\n      {path: 'friend/:friendCode', component: UserComponent},\n      {path: 'post/:postId', component: PostComponent},\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRoutingModule {}\n","import {HttpClient} from '@angular/common/http';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {Observable, of} from 'rxjs';\nimport {catchError, filter, pluck, switchMap, map, shareReplay, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n})\nexport class UserComponent implements OnInit {\n  userId$: Observable<number> = this.route.params.pipe(\n    pluck('userId'),\n    filter(val => ![undefined, null].includes(val)),\n    map(val => parseInt(val, 10)),\n    shareReplay(1)\n  );\n  next$ = this.userId$.pipe(map(id => Math.min(+id + 1, 10)));\n  prev$ = this.userId$.pipe(map(id => Math.max(1, +id - 1)));\n\n  apiUser$ = this.userId$.pipe(\n    switchMap(id =>\n      this.http.get<User>(`https://jsonplaceholder.typicode.com/users/${id}`).pipe(\n        catchError(() =>\n          of({\n            id: id,\n            name: 'not found',\n          } as User)\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  user$ = isScullyGenerated()\n    ? this.transferState.getState<User>('user')\n    : this.apiUser$.pipe(tap(user => this.transferState.setState('user', user)));\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private transferState: TransferStateService\n  ) {}\n\n  ngOnInit() {}\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  address: Address;\n  phone: string;\n  website: string;\n  company: Company;\n}\n\nexport interface Address {\n  street: string;\n  suite: string;\n  city: string;\n  zipcode: string;\n  geo: Geo;\n}\n\nexport interface Geo {\n  lat: string;\n  lng: string;\n}\n\nexport interface Company {\n  name: string;\n  catchPhrase: string;\n  bs: string;\n}\n","<style>\n  #user {\n    display: grid;\n    grid-template-columns: 10rem 1fr;\n    grid-template-rows: repeat(4, 1rem);\n  }\n\n  #user .label {\n    text-align: right;\n  }\n\n  #user .label::after {\n    content: ':';\n  }\n\n  strong {\n    display: inline-block;\n    padding: 5px;\n    border-radius: 5px;\n    background-color: #afafaf;\n    margin: 10px;\n  }\n  #sub {\n    padding: 20px;\n  }\n</style>\n<section *ngIf=\"user$ | async as user; else loading\">\n  <h4>User Data</h4>\n\n  <section id=\"user\">\n    <label>Id</label>\n    <p>{{ user.id }}</p>\n    <label>Name</label>\n    <p>{{ user.name }}</p>\n    <label>email</label>\n    <p>{{ user.email }}</p>\n    <label>company</label>\n    <p>{{ user.company.name }}</p>\n  </section>\n\n  <strong>{{ user.company.catchPhrase }}</strong>\n</section>\n<ng-template #loading>\n  <section>\n    Loading ...\n  </section>\n</ng-template>\n<a [routerLink]=\"['/user/' + (prev$ | async)]\">Previous ({{ prev$ | async }})</a>\n<a [routerLink]=\"['/user/' + (next$ | async)]\">Next ({{ next$ | async }})</a>\n\n<hr />\n<section id=\"sub\">\n  <router-outlet></router-outlet>\n</section>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PostComponent} from './post/post.component';\nimport {PostsComponent} from './posts/posts.component';\nimport {UserRoutingModule} from './user-routing.module';\nimport {UserComponent} from './user.component';\nimport {UsersComponent} from './users/users.component';\n\n@NgModule({\n  declarations: [UserComponent, UsersComponent, PostsComponent, PostComponent],\n  imports: [CommonModule, UserRoutingModule],\n})\nexport class UserModule {}\n","import {HttpClient} from '@angular/common/http';\nimport {Component, OnInit} from '@angular/core';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {of} from 'rxjs';\nimport {catchError, shareReplay, tap} from 'rxjs/operators';\nimport {User} from '../user.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  apiUsers$ = this.http.get<User[]>(`https://jsonplaceholder.typicode.com/users`).pipe(\n    catchError(() => of([] as User[])),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  users$ = isScullyGenerated()\n    ? this.transferState.getState<User[]>('users')\n    : this.apiUsers$.pipe(tap(user => this.transferState.setState('users', user)));\n\n  constructor(private http: HttpClient, private transferState: TransferStateService) {}\n\n  ngOnInit() {}\n}\n","<h1>Users</h1>\n\n<section *ngIf=\"users$ | async as users\">\n  <table>\n    <thead>\n      <th>Id</th>\n      <th>Username</th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{ user.id }}</td>\n        <td>\n          <a [routerLink]=\"user.id\"> {{ user.name }}</a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n"]}