{"version":3,"sources":["webpack:///home/sander/Documents/werk/scully/dist/scullyio/ng-lib/__ivy_ngcc__/fesm2015/scullyio-ng-lib.js","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["_c0","LocalState","IdleMonitorService","zone","router","imState","idle","timeOut","idle$","pipe","initApp","Event","bubbles","cancelable","appReady","appTimeout","window","dispatchEvent","events","ev","urlAfterRedirects","undefined","zoneIdleCheck","subscribe","toPromise","Zone","simpleTimeout","taskTrackingZone","current","get","value","setState","runOutsideAngular","tCancel","count","startTime","Date","now","monitor","clearTimeout","macroTasks","length","find","z","source","includes","setTimeout","console","warn","Promise","r","milliseconds","next","Object","assign","key","ɵfac","IdleMonitorService_Factory","t","ctorParameters","type","ɵprov","factory","token","providedIn","args","fetchHttp","url","responseType","resolve","reject","xhr","XMLHttpRequest","addEventListener","response","err","open","send","ScullyRoute","ScullyRoutesService","refresh","allRoutes$","routes","Array","isArray","cleanDups","refCount","bufferSize","available$","list","filter","hasOwnProperty","published","unPublished$","topLevel$","route","slice","reload","location","curLocation","pathname","trim","slugs","slug","endsWith","m","Map","forEach","set","sourceFile","values","ScullyRoutesService_Factory","findComments","rootElem","searchText","comments","iterator","document","createNodeIterator","NodeFilter","SHOW_COMMENT","acceptNode","node","nodeValue","FILTER_REJECT","FILTER_ACCEPT","curNode","nextNode","push","ScullyContent","scullyBegin","scullyEnd","ScullyContentComponent","elmRef","srs","elm","nativeElement","handlePage","template","createElement","currentCssId","getCSSId","scullyContent","htmlString","html","cssId","innerHTML","split","join","curPage","href","then","atr","e","error","parent","parentElement","body","begin","createComment","end","insertBefore","content","querySelectorAll","upgradeToRoutelink","bind","lnk","getAttribute","toLowerCase","onclick","splitRoute","curSplit","pop","preventDefault","navigate","routed","every","part","i","p","cur","nextSibling","removeChild","getAttributeNames","a","startsWith","ScullyContentComponent_Factory","ɵcmp","selectors","ngContentSelectors","decls","vars","ScullyContentComponent_Template","rf","ctx","styles","encapsulation","changeDetection","selector","OnPush","None","preserveWhitespaces","ScullyContentModule","ɵmod","ɵinj","ScullyContentModule_Factory","ngJitMode","declarations","exports","ScullyLibModule","ScullyLibModule_Factory","imports","isScullyRunning","isScullyGenerated","SCULLY_SCRIPT_ID","SCULLY_STATE_START","SCULLY_STATE_END","State","TransferStateService","isNavigatingBS","stateBS","state$","isNav","asObservable","setupEnvForTransferState","setupNavStartDataFetching","script","setAttribute","head","appendChild","name","val","newState","textContent","JSON","stringify","newStateStr","parse","_a","TransferStateService_Factory","Document","decorators","webpackEmptyAsyncContext","req","Error","code","keys","module","id","path","loadChildren","AboutModule","StaticModule","BlogModule","UserModule","DemoModule","redirectTo","pathMatch","PagenotfoundModule","AppRoutingModule","forRoot","AppComponent","currentState","templateUrl","styleUrls","AppModule","bootstrap","environment","production"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { __awaiter } from 'tslib';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgModule, Inject } from '@angular/core';\nimport { NavigationEnd, Router, NavigationStart } from '@angular/router';\nimport { BehaviorSubject, ReplaySubject, of, EMPTY, forkJoin } from 'rxjs';\nimport { pluck, filter, tap, take, switchMap, catchError, map, shareReplay, first } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/idleMonitor/idle-monitor.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\n\nconst _c0 = [\"*\"];\nfunction LocalState() { }\nif (false) {\n    /** @type {?} */\n    LocalState.prototype.idle;\n    /** @type {?} */\n    LocalState.prototype.timeOut;\n}\nclass IdleMonitorService {\n    /**\n     * @param {?} zone\n     * @param {?} router\n     */\n    constructor(zone, router) {\n        this.zone = zone;\n        this.router = router;\n        this.imState = new BehaviorSubject({\n            idle: false,\n            timeOut: 5 * 1000,\n        });\n        this.idle$ = this.imState.pipe(pluck('idle'));\n        this.initApp = new Event('AngularInitialized', { bubbles: true, cancelable: false });\n        this.appReady = new Event('AngularReady', { bubbles: true, cancelable: false });\n        this.appTimeout = new Event('AngularTimeout', { bubbles: true, cancelable: false });\n        if (window) {\n            window.dispatchEvent(this.initApp);\n            this.router.events\n                .pipe(filter((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            ev => ev instanceof NavigationEnd && ev.urlAfterRedirects !== undefined)), tap((/**\n             * @return {?}\n             */\n            () => this.zoneIdleCheck())))\n                .subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.idle$.pipe(take(1)).toPromise();\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    zoneIdleCheck() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Zone === undefined) {\n                return this.simpleTimeout();\n            }\n            /** @type {?} */\n            const taskTrackingZone = Zone.current.get('TaskTrackingZone');\n            if (taskTrackingZone === undefined) {\n                return this.simpleTimeout();\n            }\n            if (this.imState.value.idle) {\n                yield this.setState('idle', false);\n            }\n            /** run the actual check for 'idle' outsides zone, otherwise it will never come to an end. */\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                let tCancel;\n                /** @type {?} */\n                let count = 0;\n                /** @type {?} */\n                const startTime = Date.now();\n                /** @type {?} */\n                const monitor = (/**\n                 * @return {?}\n                 */\n                () => {\n                    clearTimeout(tCancel);\n                    // console.table(taskTrackingZone.macroTasks);\n                    if (Date.now() - startTime > 30 * 1000) {\n                        /** bail out after 30 seconds. */\n                        window.dispatchEvent(this.appTimeout);\n                        return;\n                    }\n                    if ((taskTrackingZone.macroTasks.length > 0 &&\n                        taskTrackingZone.macroTasks.find((/**\n                         * @param {?} z\n                         * @return {?}\n                         */\n                        (z) => z.source.includes('XMLHttpRequest'))) !== undefined) ||\n                        count < 1 // make sure it runs at least once!\n                    ) {\n                        tCancel = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            count += 1;\n                            monitor();\n                        }), 50);\n                        return;\n                    }\n                    window.dispatchEvent(this.appReady);\n                    this.setState('idle', true);\n                });\n                monitor();\n            }));\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    simpleTimeout() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** zone not available, use a timeout instead. */\n            console.warn('Scully is using timeouts, add the needed polyfills instead!');\n            yield new Promise((/**\n             * @param {?} r\n             * @return {?}\n             */\n            r => setTimeout(r, this.imState.value.timeOut)));\n            window.dispatchEvent(this.appReady);\n        });\n    }\n    /**\n     * @param {?} milliseconds\n     * @return {?}\n     */\n    setPupeteerTimoutValue(milliseconds) {\n        this.imState.next(Object.assign(Object.assign({}, this.imState.value), { timeOut: milliseconds }));\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    setState(key, value) {\n        this.imState.next(Object.assign(Object.assign({}, this.imState.value), { [key]: value }));\n    }\n}\nIdleMonitorService.ɵfac = function IdleMonitorService_Factory(t) { return new (t || IdleMonitorService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\n/** @nocollapse */\nIdleMonitorService.ctorParameters = () => [\n    { type: NgZone },\n    { type: Router }\n];\n/** @nocollapse */ IdleMonitorService.ɵprov = ɵɵdefineInjectable({ factory: function IdleMonitorService_Factory() { return new IdleMonitorService(ɵɵinject(NgZone), ɵɵinject(Router)); }, token: IdleMonitorService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IdleMonitorService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Router }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.imState;\n    /** @type {?} */\n    IdleMonitorService.prototype.idle$;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.initApp;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.appReady;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.appTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/fetchHttp.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} url\n * @param {?=} responseType\n * @return {?}\n */\nfunction fetchHttp(url, responseType = 'json') {\n    return new Promise((/**\n     * @param {?} resolve\n     * @param {?} reject\n     * @return {?}\n     */\n    (resolve, reject) => {\n        /** @type {?} */\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = responseType;\n        xhr.addEventListener('load', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        ev => resolve(xhr.response)));\n        xhr.addEventListener('error', (/**\n         * @param {...?} err\n         * @return {?}\n         */\n        (...err) => reject(err)));\n        xhr.open('get', url, true);\n        xhr.send();\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/route-service/scully-routes.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ScullyRoute() { }\nif (false) {\n    /** @type {?} */\n    ScullyRoute.prototype.route;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.title;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.slugs;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.published;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.slug;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.sourceFile;\n    /* Skipping unhandled member: [prop: string]: any;*/\n}\nclass ScullyRoutesService {\n    constructor() {\n        this.refresh = new ReplaySubject(1);\n        this.allRoutes$ = this.refresh.pipe(switchMap((/**\n         * @return {?}\n         */\n        () => fetchHttp('/assets/scully-routes.json'))), catchError((/**\n         * @return {?}\n         */\n        () => {\n            console.warn('Scully routes file not found, are you running the Scully generated version of your site?');\n            return of((/** @type {?} */ ([])));\n        })), \n        /** filter out all non-array results */\n        filter((/**\n         * @param {?} routes\n         * @return {?}\n         */\n        routes => Array.isArray(routes))), map(this.cleanDups), shareReplay({ refCount: false, bufferSize: 1 }));\n        this.available$ = this.allRoutes$.pipe(map((/**\n         * @param {?} list\n         * @return {?}\n         */\n        list => list.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => (r.hasOwnProperty('published') ? r.published !== false : true))))), shareReplay({ refCount: false, bufferSize: 1 }));\n        this.unPublished$ = this.allRoutes$.pipe(map((/**\n         * @param {?} list\n         * @return {?}\n         */\n        list => list.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => (r.hasOwnProperty('published') ? r.published === false : false))))), shareReplay({ refCount: false, bufferSize: 1 }));\n        this.topLevel$ = this.available$.pipe(map((/**\n         * @param {?} routes\n         * @return {?}\n         */\n        routes => routes.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => !r.route.slice(1).includes('/'))))), shareReplay({ refCount: false, bufferSize: 1 }));\n        /** kick off first cycle */\n        this.reload();\n    }\n    /**\n     * @return {?}\n     */\n    getCurrent() {\n        if (!location) {\n            /** probably not in a browser, no current location available */\n            return of();\n        }\n        /** @type {?} */\n        const curLocation = location.pathname.trim();\n        return this.available$.pipe(map((/**\n         * @param {?} list\n         * @return {?}\n         */\n        list => list.find((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => curLocation === r.route.trim() ||\n            (r.slugs && Array.isArray(r.slugs) && r.slugs.find((/**\n             * @param {?} slug\n             * @return {?}\n             */\n            slug => curLocation.endsWith(slug.trim())))))))));\n    }\n    /**\n     * @param {?} routes\n     * @return {?}\n     */\n    cleanDups(routes) {\n        /** @type {?} */\n        const m = new Map();\n        routes.forEach((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => m.set(r.sourceFile || r.route, r)));\n        return [...m.values()];\n    }\n    /**\n     * @return {?}\n     */\n    reload() {\n        this.refresh.next();\n    }\n}\nScullyRoutesService.ɵfac = function ScullyRoutesService_Factory(t) { return new (t || ScullyRoutesService)(); };\n/** @nocollapse */\nScullyRoutesService.ctorParameters = () => [];\n/** @nocollapse */ ScullyRoutesService.ɵprov = ɵɵdefineInjectable({ factory: function ScullyRoutesService_Factory() { return new ScullyRoutesService(); }, token: ScullyRoutesService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScullyRoutesService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyRoutesService.prototype.refresh;\n    /** @type {?} */\n    ScullyRoutesService.prototype.allRoutes$;\n    /** @type {?} */\n    ScullyRoutesService.prototype.available$;\n    /** @type {?} */\n    ScullyRoutesService.prototype.unPublished$;\n    /** @type {?} */\n    ScullyRoutesService.prototype.topLevel$;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/findComments.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an array of nodes coninting all the html comments in the element.\n * When a searchText is given this is narrowed down to only comments that contian this text\n * @param {?} rootElem Element to search nto\n * @param {?=} searchText optional string that needs to be in a HTML comment\n * @return {?}\n */\nfunction findComments(rootElem, searchText) {\n    /** @type {?} */\n    const comments = [];\n    // Fourth argument, which is actually obsolete according to the DOM4 standard, seems required in IE 11\n    /** @type {?} */\n    const iterator = document.createNodeIterator(rootElem, NodeFilter.SHOW_COMMENT, {\n        acceptNode: (/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            // Logic to determine whether to accept, reject or skip node\n            // In this case, only accept nodes that have content\n            // that is containing our searchText, by rejecting any other nodes.\n            if (searchText && node.nodeValue && !node.nodeValue.includes(searchText)) {\n                return NodeFilter.FILTER_REJECT;\n            }\n            return NodeFilter.FILTER_ACCEPT;\n        }),\n    }\n    // , false // IE-11 support requires this parameter.\n    );\n    /** @type {?} */\n    let curNode;\n    // tslint:disable-next-line: no-conditional-assignment\n    while ((curNode = iterator.nextNode())) {\n        comments.push(curNode);\n    }\n    return comments;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/scully-content/scully-content.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ScullyContent() { }\nif (false) {\n    /** @type {?} */\n    ScullyContent.prototype.html;\n    /** @type {?} */\n    ScullyContent.prototype.cssId;\n}\n/**\n * this is needed, because otherwise the CLI borks while building\n * @type {?}\n */\nconst scullyBegin = '<!--scullyContent-begin-->';\n/** @type {?} */\nconst scullyEnd = '<!--scullyContent-end-->';\nclass ScullyContentComponent {\n    /**\n     * @param {?} elmRef\n     * @param {?} srs\n     * @param {?} router\n     */\n    constructor(elmRef, srs, router) {\n        this.elmRef = elmRef;\n        this.srs = srs;\n        this.router = router;\n        this.elm = (/** @type {?} */ (this.elmRef.nativeElement));\n        /**\n         * pull in all  available routes into an eager promise\n         */\n        this.routes = this.srs.available$.pipe(take(1)).toPromise();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // /** make sure the idle-check is loaded. */\n        // this.idle.init();\n        if (this.elm) {\n            /** this will only fire in a browser environment */\n            this.handlePage();\n        }\n    }\n    /**\n     * Loads the static content from scully into the view\n     * Will fetch the content from sibling links with xmlHTTPrequest\n     * @private\n     * @return {?}\n     */\n    handlePage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const template = document.createElement('template');\n            /** @type {?} */\n            const currentCssId = this.getCSSId(this.elm);\n            if (window.scullyContent) {\n                /**\n                 * upgrade existing static content\n                 * @type {?}\n                 */\n                const htmlString = window.scullyContent.html;\n                if (currentCssId !== window.scullyContent.cssId) {\n                    /** replace the angular cssId */\n                    template.innerHTML = htmlString.split(window.scullyContent.cssId).join(currentCssId);\n                }\n                else {\n                    template.innerHTML = htmlString;\n                }\n            }\n            else {\n                /** @type {?} */\n                const curPage = location.href;\n                /**\n                 *   NOTE\n                 * when updateting the texts for the errors, make sure you leave the\n                 *  `id=\"___scully-parsing-error___\"`\n                 * in there. That way users can detect rendering errors in their CI\n                 * on a reliable way.\n                 */\n                yield fetchHttp(curPage, 'text')\n                    .then((/**\n                 * @param {?} html\n                 * @return {?}\n                 */\n                (html) => {\n                    try {\n                        /** @type {?} */\n                        const htmlString = html.split(scullyBegin)[1].split(scullyEnd)[0];\n                        if (htmlString.includes('_ngcontent')) {\n                            /**\n                             * update the angular cssId\n                             * @type {?}\n                             */\n                            const atr = '_ngcontent' + htmlString.split('_ngcontent')[1].split('=')[0];\n                            template.innerHTML = htmlString.split(atr).join(currentCssId);\n                        }\n                    }\n                    catch (e) {\n                        template.innerHTML = `<h2 id=\"___scully-parsing-error___\">Sorry, could not parse static page content</h2>\n            <p>This might happen if you are not using the static generated pages.</p>`;\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                e => {\n                    template.innerHTML =\n                        '<h2 id=\"___scully-parsing-error___\">Sorry, could not load static page content</h2>';\n                    console.error('problem during loading static scully content', e);\n                }));\n            }\n            /**\n             * insert the whole thing just before the `<scully-content>` element\n             * @type {?}\n             */\n            const parent = this.elm.parentElement || document.body;\n            /** @type {?} */\n            const begin = document.createComment('scullyContent-begin');\n            /** @type {?} */\n            const end = document.createComment('scullyContent-end');\n            parent.insertBefore(begin, this.elm);\n            parent.insertBefore(template.content, this.elm);\n            parent.insertBefore(end, this.elm);\n            /** upgrade all hrefs to simulated routelinks  */\n            document.querySelectorAll('[href]').forEach(this.upgradeToRoutelink.bind(this));\n        });\n    }\n    /**\n     * upgrade a **href** attributes to links that respect the Angular router\n     * and don't do a full page reload. Only works on links that are found in the\n     * Scully route config file.\n     * @param {?} elm the element containing the **hrefs**\n     * @return {?}\n     */\n    upgradeToRoutelink(elm) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const routes = yield this.routes;\n            /** @type {?} */\n            const lnk = elm.getAttribute('href').toLowerCase();\n            /** @type {?} */\n            const route = routes.find((/**\n             * @param {?} r\n             * @return {?}\n             */\n            r => r.route.toLowerCase() === lnk));\n            /** only upgrade routes known by scully. */\n            if (lnk && route) {\n                elm.onclick = (/**\n                 * @param {?} ev\n                 * @return {?}\n                 */\n                (ev) => __awaiter(this, void 0, void 0, function* () {\n                    /** @type {?} */\n                    const splitRoute = route.route.split(`/`);\n                    /** @type {?} */\n                    const curSplit = location.pathname.split('/');\n                    // loose last \"part\" of route\n                    curSplit.pop();\n                    ev.preventDefault();\n                    /** @type {?} */\n                    const routed = yield this.router.navigate(splitRoute).catch((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    e => {\n                        console.error('routing error', e);\n                        return false;\n                    }));\n                    if (!routed) {\n                        return;\n                    }\n                    /** delete the content, as it is now out of date! */\n                    window.scullyContent = undefined;\n                    /** check for the same route with different \"data\", and NOT a level higher (length) */\n                    if (curSplit.every((/**\n                     * @param {?} part\n                     * @param {?} i\n                     * @return {?}\n                     */\n                    (part, i) => splitRoute[i] === part)) && splitRoute.length > curSplit.length) {\n                        /**\n                         * as Angular doesn't destroy the component if we stay on the same page,\n                         * we have to manually delete old content. Also we need to kick of loading\n                         * the new content. handlePage() takes care of that.\n                         */\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            /** @type {?} */\n                            const p = this.elm.parentElement;\n                            /** @type {?} */\n                            let cur = (/** @type {?} */ (findComments(p, 'scullyContent-begin')[0]));\n                            /** @type {?} */\n                            let next;\n                            do {\n                                next = cur.nextSibling;\n                                p.removeChild(cur);\n                                cur = next;\n                            } while (next && next !== this.elm);\n                            // tslint:disable-next-line: no-string-literal\n                            this.handlePage();\n                        }), 10); // a small delay, so we are sure the angular parts in the page are settled enough\n                    }\n                }));\n            }\n        });\n    }\n    /**\n     * @param {?} elm\n     * @return {?}\n     */\n    getCSSId(elm) {\n        return elm.getAttributeNames().find((/**\n         * @param {?} a\n         * @return {?}\n         */\n        a => a.startsWith('_ngcontent'))) || 'none_found';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { }\n}\nScullyContentComponent.ɵfac = function ScullyContentComponent_Factory(t) { return new (t || ScullyContentComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScullyRoutesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router)); };\nScullyContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ScullyContentComponent, selectors: [[\"scully-content\"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScullyContentComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\"\\n      :host {\\n        display: none;\\n      }\\n      scully-content {\\n        display: none;\\n      }\\n    \"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nScullyContentComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScullyRoutesService },\n    { type: Router }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScullyContentComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'scully-content',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: true,\n                styles: [`\n      :host {\n        display: none;\n      }\n      scully-content {\n        display: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScullyRoutesService }, { type: ɵngcc1.Router }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    ScullyContentComponent.prototype.elm;\n    /**\n     * pull in all  available routes into an eager promise\n     * @type {?}\n     */\n    ScullyContentComponent.prototype.routes;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.elmRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.srs;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/scully-content/scully-content.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScullyContentModule {\n}\nScullyContentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScullyContentModule });\nScullyContentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScullyContentModule_Factory(t) { return new (t || ScullyContentModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScullyContentModule, { declarations: [ScullyContentComponent], exports: [ScullyContentComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScullyContentModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ScullyContentComponent],\n                exports: [ScullyContentComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/scully-lib.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScullyLibModule {\n    /**\n     * We use a little trick to get a working idle-service.\n     * First, we separate out the component in a separate module to prevent a circulair injection\n     * second we create a constuctor that activates the IdleMonitorService. as that is provided for 'root'\n     * there will be only 1 instance in our app.\n     * We don't need forRoot, as we are not configuring anything in here.\n     * @param {?} idle\n     */\n    constructor(idle) {\n        this.idle = idle;\n    }\n}\nScullyLibModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScullyLibModule });\nScullyLibModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScullyLibModule_Factory(t) { return new (t || ScullyLibModule)(ɵngcc0.ɵɵinject(IdleMonitorService)); }, imports: [[ScullyContentModule],\n        ScullyContentModule] });\n/** @nocollapse */\nScullyLibModule.ctorParameters = () => [\n    { type: IdleMonitorService }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScullyLibModule, { imports: [ScullyContentModule], exports: [ScullyContentModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScullyLibModule, [{\n        type: NgModule,\n        args: [{\n                imports: [ScullyContentModule],\n                exports: [ScullyContentModule]\n            }]\n    }], function () { return [{ type: IdleMonitorService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyLibModule.prototype.idle;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/isScully.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable: no-string-literal\n/** @type {?} */\nconst isScullyRunning = (/**\n * @return {?}\n */\n() => window && window['ScullyIO'] === 'running');\n/** @type {?} */\nconst isScullyGenerated = (/**\n * @return {?}\n */\n() => window && window['ScullyIO'] === 'generated');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/transfer-state/transfer-state.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SCULLY_SCRIPT_ID = `scully-transfer-state`;\n/** @type {?} */\nconst SCULLY_STATE_START = `/** ___SCULLY_STATE_START___ */`;\n/** @type {?} */\nconst SCULLY_STATE_END = `/** ___SCULLY_STATE_END___ */`;\n/**\n * @record\n */\nfunction State() { }\n// Adding this dynamic comment to suppress ngc error around Document as a DI token.\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/**\n * \\@dynamic\n */\nclass TransferStateService {\n    /**\n     * @param {?} document\n     * @param {?} router\n     */\n    constructor(document, router) {\n        this.document = document;\n        this.router = router;\n        this.isNavigatingBS = new BehaviorSubject(false);\n        this.stateBS = new BehaviorSubject({});\n        this.state$ = this.isNavigatingBS.pipe(switchMap((/**\n         * @param {?} isNav\n         * @return {?}\n         */\n        isNav => (isNav ? EMPTY : this.stateBS.asObservable()))));\n        this.setupEnvForTransferState();\n        this.setupNavStartDataFetching();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupEnvForTransferState() {\n        if (isScullyRunning()) {\n            // In Scully puppeteer\n            this.script = this.document.createElement('script');\n            this.script.setAttribute('id', SCULLY_SCRIPT_ID);\n            this.document.head.appendChild(this.script);\n        }\n        else if (isScullyGenerated()) {\n            // On the client AFTER scully rendered it\n            this.stateBS.next((window && window[SCULLY_SCRIPT_ID]) || {});\n        }\n    }\n    /**\n     * Getstate will return an observable that fires once and completes.\n     * It does so right after the navigation for the page has finished.\n     * @template T\n     * @param {?} name The name of the state to\n     * @return {?}\n     */\n    getState(name) {\n        return this.state$.pipe(pluck(name));\n    }\n    /**\n     * @template T\n     * @param {?} name\n     * @param {?} val\n     * @return {?}\n     */\n    setState(name, val) {\n        /** @type {?} */\n        const newState = Object.assign(Object.assign({}, this.stateBS.value), { [name]: val });\n        this.stateBS.next(newState);\n        if (isScullyRunning()) {\n            this.script.textContent = `window['${SCULLY_SCRIPT_ID}']=${SCULLY_STATE_START}${JSON.stringify(newState)}${SCULLY_STATE_END}`;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setupNavStartDataFetching() {\n        /**\n         * Each time the route changes, get the Scully state from the server-rendered page\n         */\n        if (!isScullyGenerated()) {\n            return;\n        }\n        this.router.events\n            .pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e instanceof NavigationStart)), switchMap((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => {\n            this.isNavigatingBS.next(true);\n            return forkJoin([\n                /** prevent emitting before navigation to _this_ URL is done. */\n                this.router.events.pipe(filter((/**\n                 * @param {?} ev\n                 * @return {?}\n                 */\n                ev => ev instanceof NavigationEnd && ev.url === e.url)), first()),\n                // Get the next route's page from the server\n                fetchHttp(e.url + '/index.html', 'text').catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                err => {\n                    console.warn('Failed transfering state from route', err);\n                    return '';\n                })),\n            ]);\n        })), \n        /** parse out the relevant piece off text, and conver to json */\n        map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([e, html]) => {\n            try {\n                /** @type {?} */\n                const newStateStr = html.split(SCULLY_STATE_START)[1].split(SCULLY_STATE_END)[0];\n                return JSON.parse(newStateStr);\n            }\n            catch (_a) {\n                return null;\n            }\n        })), \n        /** prevent progressing in case anything went sour above */\n        filter((/**\n         * @param {?} val\n         * @return {?}\n         */\n        val => val !== null)), \n        /** activate the new state */\n        tap((/**\n         * @param {?} newState\n         * @return {?}\n         */\n        newState => {\n            /** signal to send out update */\n            this.isNavigatingBS.next(false);\n            /** replace the state, so we don't leak memory on old state */\n            this.stateBS.next(newState);\n        })))\n            .subscribe();\n    }\n}\nTransferStateService.ɵfac = function TransferStateService_Factory(t) { return new (t || TransferStateService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\n/** @nocollapse */\nTransferStateService.ctorParameters = () => [\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Router }\n];\n/** @nocollapse */ TransferStateService.ɵprov = ɵɵdefineInjectable({ factory: function TransferStateService_Factory() { return new TransferStateService(ɵɵinject(DOCUMENT), ɵɵinject(Router)); }, token: TransferStateService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TransferStateService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.Router }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.script;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.isNavigatingBS;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.stateBS;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.state$;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.document;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: scullyio-ng-lib.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { IdleMonitorService, ScullyContentComponent, ScullyContentModule, ScullyLibModule, ScullyRoutesService, TransferStateService, isScullyGenerated, isScullyRunning };\n\n//# sourceMappingURL=scullyio-ng-lib.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'about',\n    loadChildren: () => import('./about/about.module').then(m => m.AboutModule),\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./static/static.module').then(m => m.StaticModule),\n  },\n  {\n    path: 'blog',\n    loadChildren: () => import('./blog/blog.module').then(m => m.BlogModule),\n  },\n  {\n    path: 'user',\n    loadChildren: () => import('./user/user.module').then(m => m.UserModule),\n  },\n  {path: 'demo', loadChildren: () => import('./demo/demo.module').then(m => m.DemoModule)},\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {\n    path: '**',\n    loadChildren: () => import('./pagenotfound/pagenotfound.module').then(m => m.PagenotfoundModule),\n  },\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Component} from '@angular/core';\nimport {IdleMonitorService, isScullyGenerated, isScullyRunning} from '@scullyio/ng-lib';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  currentState = isScullyRunning()\n    ? 'rendering inside scully'\n    : isScullyGenerated()\n    ? 'Loaded from static HTML'\n    : 'SPA mode';\n  constructor() {}\n}\n","<header>\n  <h1>\n    Scully demo blog app! <small>{{ currentState }}</small>\n  </h1>\n  <a [routerLink]=\"['/home']\">🏠</a>\n</header>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer>\n  <h3>Made with ❤️ <strong>@HeroDevs</strong></h3>\n</footer>\n","import {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ScullyLibModule} from '@scullyio/ng-lib';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, AppRoutingModule, ScullyLibModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n});\n"]}