{"version":3,"sources":["./src/app/user/post/post.component.ts","./src/app/user/post/post.component.html","./src/app/user/posts/posts.component.ts","./src/app/user/posts/posts.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/user/user.module.ts","./src/app/user/users/users.component.ts","./src/app/user/users/users.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACZ;AACuD;AAElB;;;;;;;ICJzE,0EACE;IAAA,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IAEzB,oEAAG;IAAA,uDAAe;IAAA,4DAAI;IACxB,4DAAU;;;IAHJ,0DAAgB;IAAhB,+EAAgB;IAEjB,0DAAe;IAAf,8EAAe;;ADUb,MAAM,aAAa;IA2BxB,YACU,KAAqB,EACrB,IAAgB,EAChB,aAAmC;QAFnC,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAsB;QA7B7C,YAAO,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAClD,4DAAK,CAAC,MAAM,CAAC,EACb,6DAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAC/C,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAC7B,kEAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,cAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC3B,gEAAS,CAAC,EAAE,CAAC,EAAE,CACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,8CAA8C,EAAE,EAAE,CAAC,CAAC,IAAI,CAC1E,iEAAU,CAAC,GAAG,EAAE,CACd,+CAAE,CAAC;YACD,EAAE;YACF,KAAK,EAAE,WAAW;SACX,CAAC,CACX,CACF,CACF,EACD,kEAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,4CAA4C;QAC5C,UAAK,GAAG,0EAAiB,EAAE;YACzB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAO,MAAM,CAAC;YAC3C,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAO9E,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAED,QAAQ,KAAI,CAAC;;0EAnCF,aAAa;6FAAb,aAAa;QCb1B,iHACE;;;QADO,4IAA6B;;6FDazB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEyB;AACrC;AACuD;;;;;;;;ICFvF,qEACE;IAAA,uEAAoC;IAAA,uDAAgB;IAAA,4DAAI;IAC1D,4DAAK;;;IADA,0DAAgC;IAAhC,0JAAgC;IAAC,0DAAgB;IAAhB,+EAAgB;;;IAH1D,0EACE;IAAA,qEACE;IAAA,kHACE;IAEJ,4DAAK;IACP,4DAAU;;;IAJF,0DAA0B;IAA1B,6EAA0B;;ADgB3B,MAAM,cAAc;IA2BzB,YACU,KAAqB,EACrB,IAAgB,EAChB,aAAmC;QAFnC,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAsB;QA7B7C,YAAO,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAClD,4DAAK,CAAC,QAAQ,CAAC,EACf,6DAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAC/C,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAC7B,kEAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,cAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC3B,gEAAS,CAAC,EAAE,CAAC,EAAE,CACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,qDAAqD,EAAE,EAAE,CAAC,CAAC,IAAI,CACnF,iEAAU,CAAC,GAAG,EAAE,CACd,+CAAE,CAAC;YACD,EAAE;YACF,KAAK,EAAE,WAAW;SACX,CAAC,CACX,CACF,CACF,EACD,kEAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,4CAA4C;QAC5C,WAAM,GAAG,0EAAiB,EAAE;YAC1B,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC;YACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAMhF,CAAC;IAEJ,QAAQ,KAAI,CAAC;;4EAjCF,cAAc;8FAAd,cAAc;QCnB3B,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACnB,kHACE;;;QADO,0DAA+B;QAA/B,6IAA+B;;6FDkB3B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AAEN;AACQ;AACA;AACH;;;AAEpD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACrC;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,6DAAa;QACxB,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE,SAAS,EAAE,MAAM,EAAC;YACxD,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,6DAAa,EAAC;YACtD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,kEAAa,EAAC;SACjD;KACF;CACF,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEyB;AACrC;AACuD;;;;;;;ICqB3F,0EACE;IAAA,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAElB,6EACE;IAAA,wEAAO;IAAA,6DAAE;IAAA,4DAAQ;IACjB,oEAAG;IAAA,uDAAa;IAAA,4DAAI;IACpB,wEAAO;IAAA,+DAAI;IAAA,4DAAQ;IACnB,qEAAG;IAAA,wDAAe;IAAA,4DAAI;IACtB,yEAAO;IAAA,iEAAK;IAAA,4DAAQ;IACpB,qEAAG;IAAA,wDAAgB;IAAA,4DAAI;IACvB,yEAAO;IAAA,mEAAO;IAAA,4DAAQ;IACtB,qEAAG;IAAA,wDAAuB;IAAA,4DAAI;IAChC,4DAAU;IAEV,0EAAQ;IAAA,wDAA8B;IAAA,4DAAS;IACjD,4DAAU;;;IAVH,0DAAa;IAAb,4EAAa;IAEb,0DAAe;IAAf,8EAAe;IAEf,0DAAgB;IAAhB,+EAAgB;IAEhB,0DAAuB;IAAvB,sFAAuB;IAGpB,0DAA8B;IAA9B,6FAA8B;;;IAGtC,0EACE;IAAA,wEACF;IAAA,4DAAU;;;ADjCL,MAAM,aAAa;IA6BxB,YACU,KAAqB,EACrB,IAAgB,EAChB,aAAmC;QAFnC,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,kBAAa,GAAb,aAAa,CAAsB;QA/B7C,YAAO,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAClD,4DAAK,CAAC,QAAQ,CAAC,EACf,6DAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAC/C,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAC7B,kEAAW,CAAC,CAAC,CAAC,CACf,CAAC;QACF,UAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,0DAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5D,UAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,0DAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3D,aAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC1B,gEAAS,CAAC,EAAE,CAAC,EAAE,CACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,8CAA8C,EAAE,EAAE,CAAC,CAAC,IAAI,CAC1E,iEAAU,CAAC,GAAG,EAAE,CACd,+CAAE,CAAC;YACD,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,WAAW;SACV,CAAC,CACX,CACF,CACF,EACD,kEAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,4CAA4C;QAC5C,UAAK,GAAG,0EAAiB,EAAE;YACzB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAO,MAAM,CAAC;YAC3C,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAM5E,CAAC;IAEJ,QAAQ,KAAI,CAAC;;0EAnCF,aAAa;6FAAb,aAAa;QCc1B,kHACE;;QAeF,qMACE;QAIF,uEAA+C;;QAAA,uDAA8B;;QAAA,4DAAI;QACjF,uEAA+C;;QAAA,wDAA0B;;QAAA,4DAAI;QAE7E,iEACA;QAAA,8EACE;QAAA,4EAA+B;QACjC,4DAAU;;;QA3BD,4IAA2C;QAqBjD,0DAA2C;QAA3C,qOAA2C;QAAC,0DAA8B;QAA9B,gKAA8B;QAC1E,0DAA2C;QAA3C,sOAA2C;QAAC,0DAA0B;QAA1B,6JAA0B;;6FDpC5D,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACN;AACa;AACG;AACC;AACT;AACQ;;AAMhD,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAFZ,CAAC,4DAAY,EAAE,sEAAiB,CAAC;mIAE/B,UAAU,mBAHN,6DAAa,EAAE,qEAAc,EAAE,qEAAc,EAAE,kEAAa,aACjE,4DAAY,EAAE,sEAAiB;6FAE9B,UAAU;cAJtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,6DAAa,EAAE,qEAAc,EAAE,qEAAc,EAAE,kEAAa,CAAC;gBAC5E,OAAO,EAAE,CAAC,4DAAY,EAAE,sEAAiB,CAAC;aAC3C;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACyB;AACjD;AACoC;;;;;;;ICKtD,qEACE;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEACE;IAAA,uEAA2B;IAAA,uDAAe;IAAA,4DAAI;IAChD,4DAAK;IACP,4DAAK;;;IAJC,0DAAa;IAAb,4EAAa;IAEZ,0DAAsB;IAAtB,mFAAsB;IAAE,0DAAe;IAAf,wFAAe;;;IAVpD,0EACE;IAAA,wEACE;IAAA,wEACE;IAAA,qEAAI;IAAA,6DAAE;IAAA,4DAAK;IACX,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IACnB,4DAAQ;IACR,wEACE;IAAA,kHACE;IAKJ,4DAAQ;IACV,4DAAQ;IACV,4DAAU;;;IARA,0DAA0B;IAA1B,8EAA0B;;ADG7B,MAAM,cAAc;IAWzB,YAAoB,IAAgB,EAAU,aAAmC;QAA7D,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAVjF,cAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,4CAA4C,CAAC,CAAC,IAAI,CAClF,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,EAAY,CAAC,CAAC,EAClC,kEAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,4CAA4C;QAC5C,WAAM,GAAG,0EAAiB,EAAE;YAC1B,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAS,OAAO,CAAC;YAC9C,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAEG,CAAC;IAErF,QAAQ,KAAI,CAAC;;4EAbF,cAAc;8FAAd,cAAc;QCZ3B,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAEd,kHACE;;;QADO,0DAA+B;QAA/B,6IAA+B;;6FDU3B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC","file":"user-user-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {pluck, shareReplay, switchMap, catchError, tap, filter, map} from 'rxjs/operators';\nimport {Post} from '../posts/posts.component';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {ActivatedRoute} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit {\n  postId$: Observable<number> = this.route.params.pipe(\n    pluck('post'),\n    filter(val => ![undefined, null].includes(val)),\n    map(val => parseInt(val, 10)),\n    shareReplay(1)\n  );\n\n  apiPosts$ = this.postId$.pipe(\n    switchMap(id =>\n      this.http.get<Post>(`https://jsonplaceholder.typicode.com/posts/${id}`).pipe(\n        catchError(() =>\n          of({\n            id,\n            title: 'not found',\n          } as Post)\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  post$ = isScullyGenerated()\n    ? this.transferState.getState<Post>('post')\n    : this.apiPosts$.pipe(tap(post => this.transferState.setState('post', post)));\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private transferState: TransferStateService\n  ) {\n    console.log('post inits');\n  }\n\n  ngOnInit() {}\n}\n","<section *ngIf=\"post$ | async as post\">\n  <h4>{{ post.title }}</h4>\n\n  <p>{{ post.body }}</p>\n</section>\n","import {HttpClient} from '@angular/common/http';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {Observable, of} from 'rxjs';\nimport {catchError, filter, map, pluck, shareReplay, switchMap, tap} from 'rxjs/operators';\n\nexport interface Post {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n}\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css'],\n})\nexport class PostsComponent implements OnInit {\n  userId$: Observable<number> = this.route.params.pipe(\n    pluck('userId'),\n    filter(val => ![undefined, null].includes(val)),\n    map(val => parseInt(val, 10)),\n    shareReplay(1)\n  );\n\n  apiPosts$ = this.userId$.pipe(\n    switchMap(id =>\n      this.http.get<Post[]>(`https://jsonplaceholder.typicode.com/posts?userId=${id}`).pipe(\n        catchError(() =>\n          of({\n            id,\n            title: 'not found',\n          } as Post)\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  posts$ = isScullyGenerated()\n    ? this.transferState.getState('posts')\n    : this.apiPosts$.pipe(tap(posts => this.transferState.setState('posts', posts)));\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private transferState: TransferStateService\n  ) {}\n\n  ngOnInit() {}\n}\n","<h4>User posts</h4>\n<section *ngIf=\"posts$ | async as posts\">\n  <ul>\n    <li *ngFor=\"let post of posts\">\n      <a [routerLink]=\"['post', post.id]\">{{ post.title }}</a>\n    </li>\n  </ul>\n</section>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {UserComponent} from './user.component';\nimport {UsersComponent} from './users/users.component';\nimport {PostsComponent} from './posts/posts.component';\nimport {PostComponent} from './post/post.component';\n\nconst routes: Routes = [\n  {path: '', component: UsersComponent},\n  {\n    path: ':userId',\n    component: UserComponent,\n    children: [\n      {path: '', component: PostsComponent, pathMatch: 'full'},\n      {path: 'friend/:friendCode', component: UserComponent},\n      {path: 'post/:postId', component: PostComponent},\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRoutingModule {}\n","import {HttpClient} from '@angular/common/http';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {Observable, of} from 'rxjs';\nimport {catchError, filter, pluck, switchMap, map, shareReplay, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n})\nexport class UserComponent implements OnInit {\n  userId$: Observable<number> = this.route.params.pipe(\n    pluck('userId'),\n    filter(val => ![undefined, null].includes(val)),\n    map(val => parseInt(val, 10)),\n    shareReplay(1)\n  );\n  next$ = this.userId$.pipe(map(id => Math.min(+id + 1, 10)));\n  prev$ = this.userId$.pipe(map(id => Math.max(1, +id - 1)));\n\n  apiUser$ = this.userId$.pipe(\n    switchMap(id =>\n      this.http.get<User>(`https://jsonplaceholder.typicode.com/users/${id}`).pipe(\n        catchError(() =>\n          of({\n            id: id,\n            name: 'not found',\n          } as User)\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  user$ = isScullyGenerated()\n    ? this.transferState.getState<User>('user')\n    : this.apiUser$.pipe(tap(user => this.transferState.setState('user', user)));\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private transferState: TransferStateService\n  ) {}\n\n  ngOnInit() {}\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  address: Address;\n  phone: string;\n  website: string;\n  company: Company;\n}\n\nexport interface Address {\n  street: string;\n  suite: string;\n  city: string;\n  zipcode: string;\n  geo: Geo;\n}\n\nexport interface Geo {\n  lat: string;\n  lng: string;\n}\n\nexport interface Company {\n  name: string;\n  catchPhrase: string;\n  bs: string;\n}\n","<style>\n  #user {\n    display: grid;\n    grid-template-columns: 10rem 1fr;\n    grid-template-rows: repeat(4, 1rem);\n  }\n\n  #user .label {\n    text-align: right;\n  }\n\n  #user .label::after {\n    content: ':';\n  }\n\n  strong {\n    display: inline-block;\n    padding: 5px;\n    border-radius: 5px;\n    background-color: #afafaf;\n    margin: 10px;\n  }\n  #sub {\n    padding: 20px;\n  }\n</style>\n<section *ngIf=\"user$ | async as user; else loading\">\n  <h4>User Data</h4>\n\n  <section id=\"user\">\n    <label>Id</label>\n    <p>{{ user.id }}</p>\n    <label>Name</label>\n    <p>{{ user.name }}</p>\n    <label>email</label>\n    <p>{{ user.email }}</p>\n    <label>company</label>\n    <p>{{ user.company.name }}</p>\n  </section>\n\n  <strong>{{ user.company.catchPhrase }}</strong>\n</section>\n<ng-template #loading>\n  <section>\n    Loading ...\n  </section>\n</ng-template>\n<a [routerLink]=\"['/user/' + (prev$ | async)]\">Previous ({{ prev$ | async }})</a>\n<a [routerLink]=\"['/user/' + (next$ | async)]\">Next ({{ next$ | async }})</a>\n\n<hr />\n<section id=\"sub\">\n  <router-outlet></router-outlet>\n</section>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PostComponent} from './post/post.component';\nimport {PostsComponent} from './posts/posts.component';\nimport {UserRoutingModule} from './user-routing.module';\nimport {UserComponent} from './user.component';\nimport {UsersComponent} from './users/users.component';\n\n@NgModule({\n  declarations: [UserComponent, UsersComponent, PostsComponent, PostComponent],\n  imports: [CommonModule, UserRoutingModule],\n})\nexport class UserModule {}\n","import {HttpClient} from '@angular/common/http';\nimport {Component, OnInit} from '@angular/core';\nimport {isScullyGenerated, TransferStateService} from '@scullyio/ng-lib';\nimport {of} from 'rxjs';\nimport {catchError, shareReplay, tap} from 'rxjs/operators';\nimport {User} from '../user.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  apiUsers$ = this.http.get<User[]>(`https://jsonplaceholder.typicode.com/users`).pipe(\n    catchError(() => of([] as User[])),\n    shareReplay(1)\n  );\n\n  // This is an example of using TransferState\n  users$ = isScullyGenerated()\n    ? this.transferState.getState<User[]>('users')\n    : this.apiUsers$.pipe(tap(user => this.transferState.setState('users', user)));\n\n  constructor(private http: HttpClient, private transferState: TransferStateService) {}\n\n  ngOnInit() {}\n}\n","<h1>Users</h1>\n\n<section *ngIf=\"users$ | async as users\">\n  <table>\n    <thead>\n      <th>Id</th>\n      <th>Username</th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{ user.id }}</td>\n        <td>\n          <a [routerLink]=\"user.id\"> {{ user.name }}</a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n"],"sourceRoot":"webpack:///"}